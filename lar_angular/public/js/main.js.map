{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login-dialog/login.component.css","webpack:///./src/app/login-dialog/login.component.html","webpack:///./src/app/login-dialog/login.component.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button{\\n  position: fixed;\\n  bottom: 40px;\\n  right: 40px;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Projeto: Laravel + Angular</span>\\n\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item (click)=\\\"openDialogLogin()\\\">Login</button>\\n  </mat-menu>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\n  <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\n</div>\\n\\n\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from \"@angular/material\";\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { LoginComponent } from './login-dialog/login.component';\nimport {PostService} from './post.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  private posts: Post[];\n\n  constructor(public dialog: MatDialog, public postService:PostService) { }\n\n  ngOnInit(){\n    this.posts = this.postService.posts;\n    console.log(this.posts);\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.postService.salvar(result.post, result.arquivo);\n          console.log(result);\n        }\n      }\n    );\n  }\n\n  openDialogLogin(): void {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          console.log(result);\n        }\n      }\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n/**\n * Material Angular\n */\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatBadgeModule, MatChipsModule, MatDialogModule } from '@angular/material';\n\n/**\n * Material Angular\n */\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {LoginComponent} from './login-dialog/login.component';\n\n/**\n * HTTP\n */\nimport {HttpClientModule} from '@angular/common/http';\nimport { PostService } from './post.service';\n// import { FlexLayoutModule} from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n    LoginComponent\n    ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatMenuModule\n  ],\n  providers: [\n    PostService\n  ],\n  entryComponents:[\n    PostDialogComponent, LoginComponent\n  ],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around none\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Email\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Senha\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n  </mat-form-field>\\n\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"logar()\\\">Login</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  ngOnInit() {\n  }\n\n  constructor(public dialogRef: MatDialogRef<LoginComponent>){}\n\n  logar(){\n    console.log('login');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around none\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n      <mat-hint>Digite aqui seu nome</mat-hint>\\n    </mat-form-field>\\n    <mat-form-field fxFlex=\\\"40\\\">\\n      <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\" [formControl]=\\\"email\\\" required>\\n      <mat-hint>Digite aqui seu email</mat-hint>\\n      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <mat-form-field fxFlex=\\\"50\\\">\\n      <input matInput placeholder=\\\"Seu título da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\n    </mat-form-field>\\n    <mat-form-field fxFlex=\\\"40\\\">\\n      <input matInput placeholder=\\\"Seu subtítulo da mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\n    </mat-form-field>\\n  </div>\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Digite aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n  </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display:none\\\" #fileinput (change)=\\\"mudouarquivo($event)\\\">\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n  <mat-icon>add_a_photo</mat-icon>\\n  Adicionar uma Foto\\n</button>\\n\\n<p *ngIf=\\\"nomearquivo!=''\\\"><strong>Arquivo:</strong>{{ nomearquivo }} <mat-icon color=\\\"primary\\\">done</mat-icon></p>\\n\\n<div style=\\\"text-align:center\\\">\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">OK</button>\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport {FormControl, Validators} from '@angular/forms';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  private nomearquivo:string = '';\n  private dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\"),\n    arquivo: null\n  };\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' :\n            '';\n  }\n  \n  constructor(\n    public dialogRef:MatDialogRef<PostDialogComponent>\n  ) { \n  }\n\n  ngOnInit() {\n  }\n\n  mudouarquivo(event: any){\n    // console.log(event.target.files[0]);\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogRef.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogRef.close(null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Post } from \"./post\";\nimport { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\n// @Injectable({\n//   providedIn: 'root'\n// })\n@Injectable()\nexport class PostService {\n  public posts: Post[] = [];\n  public host = \"http://localhost/curso-laravel5.8/cadastro-produtos/lar_angular/public/\"\n  constructor(private http: HttpClient) {\n    this.http.get(this.host + \"/api/\").subscribe(\n      (posts: any[]) => {\n        for (let p of posts) {\n          this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append(\"nome\", post.nome);\n    uploadData.append(\"titulo\", post.titulo);\n    uploadData.append(\"subtitulo\", post.subtitulo);\n    uploadData.append(\"email\", post.email);\n    uploadData.append(\"mensagem\", post.mensagem);\n    uploadData.append(\"arquivo\", file);\n    this.http.post(this.host + \"/api\", uploadData, { observe: 'events', reportProgress: true }).subscribe((event: any) => {\n      if (event.type == HttpEventType.Response) {\n        console.log(event);\n        let p: any = event.body;\n        this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\n      }\n      if (event.type == HttpEventType.UploadProgress) {\n        // console.log('UploadProgress');\n        // console.log(event);\n      }\n    })\n  }\n\n  like(id: number) {\n    this.http.get(this.host + 'api/like/' + id, { reportProgress: true, observe: 'events' })\n      .subscribe((event: HttpEvent<any>) => {\n        if (event.type == HttpEventType.Response) {\n          let post_resposta = event.body;\n          let p = this.posts.find((p) => p.id == id)\n          p.likes = post_resposta.likes\n        }\n      });\n  }\n\n  delete(id: number) {\n    this.http.delete(this.host + \"api/destroy/\" + id).subscribe(\n      (event: HttpEvent<any>) => {\n        let i = this.posts.findIndex((p) => p.id == id)\n        if (i >= 0)\n          this.posts.splice(i, 1)\n        console.log(event);\n      }\n    );\n  }\n\n  update(post:Post){\n    \n  }\n}\n","export class Post{\n  constructor(\n    public nome: string,\n    public titulo: string,\n    public subtitulo: string,\n    public email: string,\n    public mensagem: string,\n    public arquivo?: string,\n    public id?: number,\n    public likes?: number\n  ){}\n}\n","module.exports = \".card{\\n  max-width: 300px;\\n  margin: 10px;\\n}\\n\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{ post.titulo }}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{ postService.host }}/storage/{{ post.arquivo }}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n      {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"like()\\\" color=\\\"primary\\\">Like</button>\\n    <button mat-button (click)=\\\"delete()\\\" color=\\\"accent\\\">Apagar</button>\\n    <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" matBadge=\\\"{{ post.likes }}\\\" matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {Post} from '../post';\nimport {PostService} from '../post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post : Post;\n  constructor(public postService: PostService) { }\n\n  ngOnInit() {\n    \n  }\n\n  delete(){\n      this.postService.delete(this.post.id);\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}