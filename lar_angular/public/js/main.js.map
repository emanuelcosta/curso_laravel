{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login-dialog/login.component.css","webpack:///./src/app/login-dialog/login.component.html","webpack:///./src/app/login-dialog/login.component.ts","webpack:///./src/app/login-register/login-register.component.css","webpack:///./src/app/login-register/login-register.component.html","webpack:///./src/app/login-register/login-register.component.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.html","webpack:///./src/app/post/post.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gCAAgC,sBAAsB,mBAAmB,kBAAkB,KAAK,K;;;;;;;;;;;ACAhG,0YAA0Y,mBAAmB,iY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnX;AAEiB;AACe;AACV;AACnB;AAEA;AAM7C;IAKE,sBAAmB,MAAiB,EAAS,WAAwB,EAAS,WAAwB,EAAS,GAAgB;QAA5G,WAAM,GAAN,MAAM,CAAW;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,QAAG,GAAH,GAAG,CAAa;QAJ/H,UAAK,GAAG,KAAK,CAAC;IAIqH,CAAC;IAEpI,+BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,iCAAU,GAAV;QAAA,iBAgBC;QAfC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,sDAAsD,EAAE,MAAM,CAAC,CAAC;QAC1F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;gBACtD,KAAK,EAAE,OAAO;aACf,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,UAAC,MAAM;gBACL,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,sCAAe,GAAf;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4EAAc,EAAE;YACjD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,UAAC,MAAM;YACL,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IA7CU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAM2B,2DAAS,EAAsB,yDAAW,EAAsB,yDAAW,EAAc,6DAAW;OALpH,YAAY,CA+CxB;IAAD,mBAAC;CAAA;AA/CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AACoC;AAE7E;;GAEG;AACsD;AACE;AACA;AACN;AACA;AACE;AACE;AACJ;AAC+B;AAEpF;;GAEG;AAC4C;AACO;AACoB;AACR;AACJ;AAE9D;;GAEG;AACmD;AACT;AACsC;AACxC;AAC3C,0DAA0D;AACiB;AAwC3E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,mEAAa;gBACb,uFAAmB;gBACnB,6EAAc;gBACd,gGAAsB;aACrB;YACH,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,2DAAW;gBACX,mEAAmB;gBACnB,oBAAoB;gBACpB,sEAAgB;gBAChB,wEAAe;gBACf,sEAAc;gBACd,wEAAe;gBACf,oEAAa;gBACb,0EAAgB;gBAChB,oEAAa;gBACb,0EAAgB;gBAChB,kEAAe;gBACf,iEAAc;gBACd,iEAAc;gBACd,qEAAa;gBACb,8EAAiB;aAClB;YACD,SAAS,EAAE;gBACT,0DAAW;gBACX,0DAAW;aACZ;YACD,eAAe,EAAC;gBACd,uFAAmB,EAAE,6EAAc;aACpC;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAE1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1EtB,mB;;;;;;;;;;;ACAA,kcAAkc,wCAAwC,kI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjb;AACK;AACjC;AAEe;AAO5C;IASE,wBAAmB,SAAuC,EAAU,WAAuB;QAAxE,cAAS,GAAT,SAAS,CAA8B;QAAU,gBAAW,GAAX,WAAW,CAAY;QAR3F,SAAI,GAAG,IAAI,CAAC;QACJ,UAAK,GAAG;YACd,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;SACzB,CAAC;IAK2F,CAAC;IAH9F,iCAAQ,GAAR;IACA,CAAC;IAID,8BAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;IAdU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAU8B,8DAAY,EAAsC,yDAAW;OAThF,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;ACX3B,mB;;;;;;;;;;;ACAA,+kBAA+kB,mBAAmB,2b;;;;;;;;;;;;;;;;;;;;;;;;ACAhjB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IAED,0CAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,sCAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;IAExB,CAAC;IAED,uCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC;IAlBU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,sBAAsB,CAqBlC;IAAD,6BAAC;CAAA;AArBkC;;;;;;;;;;;;ACPnC,mB;;;;;;;;;;;ACAA,+kBAA+kB,mBAAmB,w6BAAw6B,eAAe,mQ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv+C;AACD;AACM;AACxB;AAO/B;IAeE,6BACS,SAA2C;QAA3C,cAAS,GAAT,SAAS,CAAkC;QAd5C,gBAAW,GAAU,EAAE,CAAC;QACxB,UAAK,GAAG;YACd,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;YAC9B,OAAO,EAAE,IAAI;SACd,CAAC;QAEF,UAAK,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAUrE,CAAC;IATD,6CAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBAChD,EAAE,CAAC;IACb,CAAC;IAOD,sCAAQ,GAAR;IACA,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAU;QACrB,sCAAsC;QACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAnCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAiBmB,8DAAY;OAhBpB,mBAAmB,CAqC/B;IAAD,0BAAC;CAAA;AArC+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACb;AAC2D;AAEzF,gBAAgB;AAChB,uBAAuB;AACvB,KAAK;AAEL;IAIE,qBAAoB,IAAgB;QAApC,iBAQC;QARmB,SAAI,GAAJ,IAAI,CAAY;QAH7B,UAAK,GAAW,EAAE,CAAC;QAClB,SAAI,GAAG,oDAAoD,CAAC;QAGlE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,SAAS,CAC1C,UAAC,KAAY;YACX,GAAG,CAAC,CAAU,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;gBAAd,IAAI,CAAC;gBACR,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACzG;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU,EAAE,IAAU,EAAE,aAAmB;QAAlD,iBA4BC;QA3BC,IAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAEnC,IAAM,SAAS,GAAG,IAAI,gEAAW,CAAC;YAChC,eAAe,EAAE,YAAU,aAAa,CAAC,KAAO;SACjD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,EAAE,UAAU,EAAE;YAC7C,OAAO,EAAE,QAAQ;YACjB,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,SAAS;SACnB,CAAC,CAAC,SAAS,CAAC,UAAC,KAAU;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,GAAQ,KAAK,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1G,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/C,iCAAiC;gBACjC,sBAAsB;YACxB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,0BAAI,GAAJ,UAAK,EAAU;QAAf,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,GAAG,EAAE,EAAE,EAAC,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;aACnF,SAAS,CAAC,UAAC,KAAqB;YAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzC,IAAI,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC/B,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC;gBAC1C,CAAC,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAAM,GAAN,UAAO,EAAU;QAAjB,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC,SAAS,CACzD,UAAC,KAAqB;YACpB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC;YAC/C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACT,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU;QACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IApEU,WAAW;QADvB,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,WAAW,CAsEvB;IAAD,kBAAC;CAAA;AAtEuB;;;;;;;;;;;;;ACRxB;AAAA;AAAA;IACE,cACS,IAAY,EACZ,MAAc,EACd,SAAiB,EACjB,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,EAAW,EACX,KAAc;QAPd,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAAS;QAChB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAS;IACrB,CAAC;IACL,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACXD,wBAAwB,uBAAuB,mBAAmB,KAAK,K;;;;;;;;;;;ACAvE,+JAA+J,eAAe,4CAA4C,gBAAgB,0EAA0E,oBAAoB,WAAW,gBAAgB,WAAW,kBAAkB,4CAA4C,eAAe,mRAAmR,cAAc,iJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnqB;AAC5B;AACe;AAM5C;IAGE,uBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhD,gCAAQ,GAAR;IAEA,CAAC;IAED,8BAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAI,GAAJ;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAbQ;QAAR,2DAAK,EAAE;kCAAQ,0CAAI;+CAAC;IAFV,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIgC,yDAAW;OAHhC,aAAa,CAiBzB;IAAD,oBAAC;CAAA;AAjByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACb;AACgD;AAC9B;AAEhD;IAIE,qBAAoB,IAAgB,EAAS,QAAqB;QAA9C,SAAI,GAAJ,IAAI,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAH3D,eAAU,GAAS,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAClC,SAAI,GAAW,mDAAmD,CAAC;IAI3E,CAAC;IAED,2BAAK,GAAL,UAAM,IAAU;QAAhB,iBAyBC;QAxBC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,iBAAiB,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAC,MAAM,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC,SAAS,CAChI,UAAC,KAAU;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,EAAE,EAAC,KAAK,CAAC,IAAI,KAAK,kEAAa,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,IAAM,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;YAED,EAAE,EAAC,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,CAAC,EAAC;gBACvC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACjC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnC,KAAI,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;gBAC7B,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACrC,CAAC;QAEH,CAAC,CAEF;IACH,CAAC;IAED,4BAAM,GAAN;QAAA,iBAcC;QAbC,IAAI,SAAS,GAAG,IAAI,gEAAW,CAAC;YAC9B,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,YAAU,IAAI,CAAC,UAAU,CAAC,KAAO;SACnD,CAAC,CAAC;QACH,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC9B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAC,kBAAkB,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC,SAAS,CACvG,UAAC,KAAU;YACT,KAAI,CAAC,UAAU,GAAG,IAAI,0CAAI,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACpC,CAAC,CACF;QAED,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAjDU,WAAW;QADvB,gEAAU,EAAE;yCAKe,+DAAU,EAAmB,6DAAW;OAJvD,WAAW,CAkDvB;IAAD,kBAAC;CAAA;AAlDuB;;;;;;;;;;;;;ACLxB;AAAA;AAAA;IACE,cACS,IAAY,EACZ,KAAa,EACb,QAAiB,EACjB,EAAW,EACX,KAAa;QAJb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAS;QACjB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAQ;IACpB,CAAC;IAEL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button{\\r\\n  position: fixed;\\r\\n  bottom: 40px;\\r\\n  right: 40px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Projeto: Laravel + Angular</span>\\n\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\"><mat-icon>account_circle</mat-icon></button>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button *ngIf=\\\"!userLogado.id\\\" mat-menu-item (click)=\\\"openDialogLogin()\\\">Login</button>\\n    <button *ngIf=\\\"userLogado.id\\\" mat-menu-item (click)=\\\"logout()\\\">{{ userLogado.name }}(Sair)</button>\\n  </mat-menu>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" class=\\\"row\\\">\\n  <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\" class=\\\"col-md-3 col-lg-3\\\"></app-post>\\n</div>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog, MatSnackBar } from \"@angular/material\";\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { LoginComponent } from './login-dialog/login.component';\nimport { PostService } from './post.service';\nimport { User } from './user';\nimport { UserService } from './user.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  private posts: Post[];\n  private userLogado: User;\n\n  constructor(public dialog: MatDialog, public postService: PostService, public userService: UserService, public msg: MatSnackBar) { }\n\n  ngOnInit() {\n    this.userLogado = this.userService.userLogado;\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(): void {\n    if (!this.userLogado.id) {\n      let msg = this.msg.open(\"Operação não permitida. Usuário não foi autenticado!\", \"Undo\");\n    } else {\n      const dialogRef = this.dialog.open(PostDialogComponent, {\n        width: '600px',\n      });\n      dialogRef.afterClosed().subscribe(\n        (result) => {\n          if (result) {\n            this.postService.salvar(result.post, result.arquivo, this.userLogado);\n            console.log(result);\n          }\n        }\n      );\n    }\n  }\n\n  openDialogLogin(): void {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '600px',\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          console.log(\"modal dialog de login fechado\");\n        }\n      }\n    );\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\n/**\r\n * Material Angular\r\n */\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { MatBadgeModule, MatChipsModule, MatDialogModule } from '@angular/material';\r\n\r\n/**\r\n * Material Angular\r\n */\r\nimport { AppComponent } from './app.component';\r\nimport { PostComponent } from './post/post.component';\r\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {LoginComponent} from './login-dialog/login.component';\r\n\r\n/**\r\n * HTTP\r\n */\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { PostService } from './post.service';\r\nimport { LoginRegisterComponent } from './login-register/login-register.component';\r\nimport {UserService} from './user.service';\r\n// import { FlexLayoutModule} from '@angular/flex-layout';\r\nimport {MatSnackBar, MatSnackBarModule} from '@angular/material/snack-bar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PostComponent,\r\n    PostDialogComponent,\r\n    LoginComponent,\r\n    LoginRegisterComponent,\r\n    ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // FlexLayoutModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    MatBadgeModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [\r\n    PostService,\r\n    UserService\r\n  ],\r\n  entryComponents:[\r\n    PostDialogComponent, LoginComponent\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around none\\\">\\r\\n  <mat-form-field class=\\\"form-control\\\">\\r\\n    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"dados.user.email\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"form-control\\\">\\r\\n    <input matInput placeholder=\\\"Senha\\\" [type]=\\\"hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"dados.user.password\\\">\\r\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"logar()\\\">Login</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport {User} from '../user';\r\nimport { PostService } from '../post.service';\r\nimport {UserService} from \"../user.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  private dados = {\r\n    user: new User(\"\",\"\",\"\")\r\n  };\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginComponent>, private userService:UserService){}\r\n\r\n  logar(){\r\n    console.log('login');\r\n    this.userService.login(this.dados.user);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around none\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    <mat-form-field fxFlex=\\\"50\\\">\\r\\n      <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\r\\n      <mat-hint>Digite aqui seu nome</mat-hint>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field fxFlex=\\\"40\\\">\\r\\n      <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\" [formControl]=\\\"email\\\" required>\\r\\n      <mat-hint>Digite aqui seu email</mat-hint>\\r\\n      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n\\r\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\r\\n  <mat-icon>add_a_photo</mat-icon>\\r\\n  Adicionar uma Foto\\r\\n</button>\\r\\n\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"registrar()\\\">Registrar</button>\\r\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-register',\r\n  templateUrl: './login-register.component.html',\r\n  styleUrls: ['./login-register.component.css']\r\n})\r\nexport class LoginRegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registrar(){\r\n    console.log(\"registrando\")\r\n  }\r\n\r\n  login(){\r\n    console.log(\"logando\")\r\n\r\n  }\r\n\r\n  logout(){\r\n    console.log(\"saindo\")\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around none\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    <mat-form-field fxFlex=\\\"50\\\">\\r\\n      <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\r\\n      <mat-hint>Digite aqui seu nome</mat-hint>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field fxFlex=\\\"40\\\">\\r\\n      <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\" [formControl]=\\\"email\\\" required>\\r\\n      <mat-hint>Digite aqui seu email</mat-hint>\\r\\n      <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n    <mat-form-field fxFlex=\\\"50\\\">\\r\\n      <input matInput placeholder=\\\"Seu título da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field fxFlex=\\\"40\\\">\\r\\n      <input matInput placeholder=\\\"Seu subtítulo da mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Digite aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<input type=\\\"file\\\" style=\\\"display:none\\\" #fileinput (change)=\\\"mudouarquivo($event)\\\">\\r\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\r\\n  <mat-icon>add_a_photo</mat-icon>\\r\\n  Adicionar uma Foto\\r\\n</button>\\r\\n\\r\\n<p *ngIf=\\\"nomearquivo!=''\\\"><strong>Arquivo:</strong>{{ nomearquivo }} <mat-icon color=\\\"primary\\\">done</mat-icon></p>\\r\\n\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">OK</button>\\r\\n  <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport { Post } from '../post';\r\n\r\n@Component({\r\n  selector: 'app-post-dialog',\r\n  templateUrl: './post-dialog.component.html',\r\n  styleUrls: ['./post-dialog.component.css']\r\n})\r\nexport class PostDialogComponent implements OnInit {\r\n\r\n  private nomearquivo:string = '';\r\n  private dados = {\r\n    post: new Post(\"\",\"\",\"\",\"\",\"\"),\r\n    arquivo: null\r\n  };\r\n\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n        this.email.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n  \r\n  constructor(\r\n    public dialogRef:MatDialogRef<PostDialogComponent>\r\n  ) { \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  mudouarquivo(event: any){\r\n    // console.log(event.target.files[0]);\r\n    this.nomearquivo = event.target.files[0].name;\r\n    this.dados.arquivo = event.target.files[0];\r\n  }\r\n\r\n  salvar(){\r\n    this.dialogRef.close(this.dados);\r\n  }\r\n\r\n  cancelar(){\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Post } from \"./post\";\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport { User } from './user';\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n@Injectable()\r\nexport class PostService {\r\n  public posts: Post[] = [];\r\n  private host = \"http://localhost/curso_laravel/lar_angular/public/\";\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.http.get(this.host + \"/api/\").subscribe(\r\n      (posts: any[]) => {\r\n        for (let p of posts) {\r\n          this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  salvar(post: Post, file: File, usuarioLogado: User) {\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"nome\", post.nome);\r\n    uploadData.append(\"titulo\", post.titulo);\r\n    uploadData.append(\"subtitulo\", post.subtitulo);\r\n    uploadData.append(\"email\", post.email);\r\n    uploadData.append(\"mensagem\", post.mensagem);\r\n    uploadData.append(\"arquivo\", file);\r\n\r\n    const cabecalho = new HttpHeaders({\r\n      \"Authorization\": `Bearer ${usuarioLogado.token}`\r\n    });\r\n   \r\n    this.http.post(this.host + \"/api\", uploadData, {\r\n      observe: 'events',\r\n      reportProgress: true,\r\n      headers: cabecalho\r\n    }).subscribe((event: any) => {\r\n      if (event.type == HttpEventType.Response) {\r\n        console.log(event);\r\n        let p: any = event.body;\r\n        this.posts.push(new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes));\r\n      }\r\n      if (event.type == HttpEventType.UploadProgress) {\r\n        // console.log('UploadProgress');\r\n        // console.log(event);\r\n      }\r\n    })\r\n  }\r\n\r\n  like(id: number) {\r\n    this.http.get(this.host + 'api/like/' + id, {reportProgress: true, observe: 'events'})\r\n      .subscribe((event: HttpEvent<any>) => {\r\n        if (event.type == HttpEventType.Response) {\r\n          let post_resposta = event.body;\r\n          let p = this.posts.find((p) => p.id == id)\r\n          p.likes = post_resposta.likes\r\n        }\r\n      });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.http.delete(this.host + \"api/destroy/\" + id).subscribe(\r\n      (event: HttpEvent<any>) => {\r\n        let i = this.posts.findIndex((p) => p.id == id)\r\n        if (i >= 0)\r\n          this.posts.splice(i, 1)\r\n        console.log(event);\r\n      }\r\n    );\r\n  }\r\n\r\n  update(post: Post) {\r\n    console.log(\"update\");\r\n  }\r\n\r\n}\r\n","export class Post{\r\n  constructor(\r\n    public nome: string,\r\n    public titulo: string,\r\n    public subtitulo: string,\r\n    public email: string,\r\n    public mensagem: string,\r\n    public arquivo?: string,\r\n    public id?: number,\r\n    public likes?: number\r\n  ){}\r\n}\r\n","module.exports = \".card{\\r\\n  max-width: 300px;\\r\\n  margin: 10px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{ post.titulo }}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"{{ postService.host }}/storage/{{ post.arquivo }}\\\" alt=\\\"{{ post.subtitulo }}\\\">\\n  <mat-card-content>\\n    <p>\\n      {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"like()\\\" color=\\\"primary\\\">Like</button>\\n    <button mat-button (click)=\\\"delete()\\\" color=\\\"accent\\\">Apagar</button>\\n    <mat-icon color=\\\"warn\\\" *ngIf=\\\"post.likes>0\\\" matBadge=\\\"{{ post.likes }}\\\" matBadgePosition=\\\"above after\\\" matBadgeColor=\\\"warn\\\" matBadgeOverlap=\\\"false\\\">favorite</mat-icon>\\n\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {Post} from '../post';\nimport {PostService} from '../post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post : Post;\n  constructor(public postService: PostService) { }\n\n  ngOnInit() {\n    \n  }\n\n  delete(){\n      this.postService.delete(this.post.id);\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\nimport { HttpClient, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\n@Injectable()\r\nexport class UserService {\r\n  public userLogado: User = new User(\"\",\"\");\r\n  private host: string = \"http://localhost/curso_laravel/lar_angular/public\";\r\n\r\n  constructor(private http: HttpClient, public snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  login(user: User) {\r\n    const formData = new FormData();\r\n    formData.append('email', user.email);\r\n    formData.append('password', user.password);\r\n    this.http.post(this.host + '/api/auth/login', formData, { observe: 'events', responseType:\"json\", reportProgress: true}).subscribe(\r\n      (event: any) => {\r\n        console.log(event);\r\n        if(event.type === HttpEventType.ResponseHeader) {\r\n          console.log(event.status);\r\n          if (event.status === 401) {\r\n            const msg = this.snackBar.open(event.statusText, \"Undo\");\r\n          }\r\n        }\r\n\r\n        if(event.type == HttpEventType.Response){\r\n          const body = event.body;\r\n          this.userLogado.name = body.name;\r\n          this.userLogado.email = body.email;\r\n          this.userLogado.id = body.id;\r\n          this.userLogado.token = body.token;\r\n        }\r\n\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  logout() {\r\n    let cabecalho = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.userLogado.token}`\r\n    });\r\n    let formData = new FormData();\r\n    formData.append(\"email\", this.userLogado.email);\r\n    this.http.post(this.host+'/api/auth/logout', formData, {headers: cabecalho, observe: \"events\"}).subscribe(\r\n      (event: any) => {\r\n        this.userLogado = new User(\"\",\"\");\r\n      }\r\n    )\r\n\r\n    console.log(\"saindo\");\r\n  }\r\n}\r\n","export class User{\r\n  constructor(\r\n    public name: string,\r\n    public email: string,\r\n    public password?: string,\r\n    public id?: number,\r\n    public token?:string\r\n  ){}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}